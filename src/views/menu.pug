- var translatedPages = pages.map(p => {
-     var basicPath = p.path.replace(/\.html$/, '');
-     var href = p.path.replace(/index\.html$/, '');
-     return {...p, basicPath, href, translation: page[basicPath] || {}};
- })

- function childrenPages(parentPage) {
-    if (parentPage && !parentPage.basicPath.endsWith("/index")) return [];
-    var pagePath = parentPage ? parentPage.basicPath.replace(/index$/, "") : "";
-    var children = translatedPages.filter(p => p!=parentPage);
-    children = children.filter(p => !parentPage || pagePath.length && p.path.startsWith(pagePath));
-    children = children.filter(p => !p.basicPath.replace(/\/index$/, "").substring(pagePath.length).includes("/"));
-    children.sort((p1, p2) => p1.href.localeCompare(p2.href));
-    // manage position
-    var positionnables = children.filter(p => "position" in p.translation).sort((p1, p2) => p1.translation.position - p2.translation.position);
-    children = children.filter(p => !positionnables.includes(p));
-    positionnables.forEach(p => {
-       children.splice(p.translation.position, 0, p);
-    });
-    return children;
- }

mixin manageCollapse(collapsable, open)
    if (collapsable)
        details(open=open)
            summary Open/Close
            block
    else
        block


mixin createMenuItem(menuPage)
    - var pageName = menuPage.translation.name || menuPage.properties.name || menuPage.translation.title || menuPage.properties.title;
    - var className = menuPage.translation.icon ? "lenra-icon-" + menuPage.translation.icon : "";
    a(class=className href='/'+menuPage.href)= pageName
    - var subPages = childrenPages(menuPage);
    if (subPages.length)
        +manageCollapse(/*page.collapsable*/ true, currentPage.path.startsWith(menuPage.href))
            +createMenuItems(subPages)


mixin createMenuItems(pages)
    ul
        each page in pages
            li(class=(page.path==currentPage.path ? 'selected' : ''))
                +createMenuItem(page)

nav.invert-colors
    +createMenuItems(childrenPages())
