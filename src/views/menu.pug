mixin manageCollapse(collapsable, open)
    if (collapsable)
        details(open=open)
            summary Open/Close
            block
    else
        block


mixin createMenuItem(menuPage)
    - var basicPath = menuPage.path.replace(/[.]html$/, '');
    - var pagePath = menuPage.path.replace(/index.html$/, "");
    - var pageTranslation = page[basicPath];
    - var pageName = pageTranslation.name || pageTranslation.title || menuPage.properties.title;
    a(href='/'+pagePath)= pageName
    - var subPages = pages.filter(p => p!=menuPage && pagePath.length && p.path.startsWith(pagePath) && !p.path.substring(0, pagePath.lenra).includes("/"));
    if (subPages && subPages.length)
        +manageCollapse(page.collapsable, currentPage.path.startsWith(pagePath))
            +createMenuItems(subPages)


mixin createMenuItems(pages)
    ul
        each page in pages
            li(class=(page.path==currentPage.path ? 'selected' : ''))
                +createMenuItem(page)

- function childrenPages(parentPage) {
-    console.log("filterPagesPages", parentPage);
-    var pagePath = parentPage ? parentPage.path.replace(/index.html$/, "") : "";
-    var children = pages.filter(p => p!=parentPage);
-    children = children.filter(p => !parentPage || pagePath.length && p.path.startsWith(pagePath));
-    children = children.filter(p => !p.path.substring(0, pagePath.length).includes("/"));
-    children.sort((p1, p2) => {
-       if (/^([^/]+\/)?index\.html$/.test(p1.path)) return -1;
-       if (/^([^/]+\/)?index\.html$/.test(p2.path)) return 1;
-       return p1.path.localeCompare(p2.path);
-    });
-    //TODO: manage position
-    return children;
- }

nav.invert-colors
    button.primary(onclick="this.parentNode.classList.toggle('opened')") Open/Close Menu
    a.presentation(href="https://www.lenra.io/") Lenra
    +createMenuItems(childrenPages())
    nav
        a(href="mailto:conta@lenra.io") Contact us
        a(href="https://github.com/lenra-io") GitHub
